<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Roger J. Bos, CFA</title>
    <link>/</link>
    <description>Recent content on Roger J. Bos, CFA</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 08 Apr 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Linux Notes</title>
      <link>/linux/</link>
      <pubDate>Mon, 08 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>/linux/</guid>
      <description>I am a big fan of linux. I enjoy ssh-ing into servers and using the command line, but since I don&amp;rsquo;t necessarily use linux every day, I sometimes forget some of the commands, so I keep this reference for myself.
Linux Commands  df shows the amount of free space on your drive free shows the amount of free memory on your machine. history shows a list of previous commands.</description>
    </item>
    
    <item>
      <title>SQLAlchemy ORM versus Raw SQL</title>
      <link>/2019/02/25/python-sqlalchemy/</link>
      <pubDate>Mon, 25 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/02/25/python-sqlalchemy/</guid>
      <description>Python: SQLAlchemy ORM versus Raw SQL I was reading this blog post [https://auth0.com/blog/sqlalchemy-orm-tutorial-for-python-developers/] about SQLAlchemy and how to run queries using its Object Relational Mapper (ORM). It is a very good intruduction to the pythonic ORM way of talking to databases, but I think I still prefer using raw SQL. In this post I will show you some reasons why I prefer raw SQL. I will use the same database and tables used in the original tutorial for these examples.</description>
    </item>
    
    <item>
      <title>Optimization Examples in R</title>
      <link>/2019/01/16/optimization-examples-in-r/</link>
      <pubDate>Wed, 16 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/01/16/optimization-examples-in-r/</guid>
      <description>Prerequisites Before we get to the optimization examples, we will download the price history for a small number of ETFs and show how to calculate the returns, standard deviations, variance matrix and other inputs that we will need for the optimizer.
Prices For these examples, we will download the daily prices for a handful of ETFs from Yahoo Finance, starting in 2003. Once the daily data is downloaded, we use the to.</description>
    </item>
    
    <item>
      <title>Investing</title>
      <link>/investing/</link>
      <pubDate>Sun, 23 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>/investing/</guid>
      <description>TO DO</description>
    </item>
    
    <item>
      <title>DIY</title>
      <link>/diy/</link>
      <pubDate>Sat, 22 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>/diy/</guid>
      <description>This is a collection of some of my adventures (and misadventures) in home ownership and repair. This page will also act as an instruction manual should I ever try to sell my house. I would always recommend someone hire a professional if they feel uncomfortable doing a repair on their house. I do many of these repairs myself because it affords me an opportunity to learn more about how all these systems work and, often times, make improvements that otherwise probably would not happen.</description>
    </item>
    
    <item>
      <title>About</title>
      <link>/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/about/</guid>
      <description>I am a quant finance professional working in NYC. I have spent my entire career working in the equity markets. My main programming languages are R and SQL.
I have a deep love of learning and enjoy figuring out how things work, be it the stock market, plumbing systems, electrical systems, or cars. I enjoy using my Rasberry Pi for home automation projects.
You can reach me at roger dot bos at gmail dot com.</description>
    </item>
    
  </channel>
</rss>